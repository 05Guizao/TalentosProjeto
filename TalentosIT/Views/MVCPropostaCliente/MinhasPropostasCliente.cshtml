@model X.PagedList.IPagedList<TalentosIT.Models.PropostaTrabalho>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "Minhas Propostas";
    Layout = "~/Views/Shared/LayoutCliente.cshtml";
}

<h2 class="mb-4">Propostas Recebidas</h2>

@if (TempData["Mensagem"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Mensagem"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
    </div>
}

<form method="get" class="row mb-3">
    <div class="col-md-4">
        <select name="estado" class="form-select" onchange="this.form.submit()">
            <option value="">-- Filtrar por estado --</option>
            <option value="Pendente" selected="@(ViewBag.EstadoAtual == "Pendente")">Pendente</option>
            <option value="Aceite" selected="@(ViewBag.EstadoAtual == "Aceite")">Aceite</option>
            <option value="Recusada" selected="@(ViewBag.EstadoAtual == "Recusada")">Recusada</option>
        </select>
    </div>
</form>

@if (!Model.Any())
{
    <div class="alert alert-info">Ainda não recebeste propostas para o teu perfil.</div>
}
else
{
    <table class="table table-bordered table-striped align-middle shadow-sm">
        <thead class="table-dark">
        <tr>
            <th>Nome</th>
            <th>Data</th>
            <th>Categoria</th>
            <th>Horas</th>
            <th>Descrição</th>
            <th>Estado</th>
            <th class="text-center">Ações</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var proposta in Model)
        {
            <tr>
                <td>@proposta.Nome</td>
                <td>@proposta.DataCriacao.ToString("dd/MM/yyyy")</td>
                <td>@proposta.CategoriaTalento</td>
                <td>@proposta.NumTotalHoras</td>
                <td>@proposta.DescricaoTrabalho</td>
                <td>
                    @switch (proposta.Estado)
                    {
                        case "Pendente":
                            <span class="badge bg-warning text-dark">Sem Resposta</span>
                            break;
                        case "Aceite":
                            <span class="badge bg-success">Aceite</span>
                            break;
                        case "Recusada":
                            <span class="badge bg-danger">Recusada</span>
                            break;
                        default:
                            <span class="badge bg-secondary">@proposta.Estado</span>
                            break;
                    }
                </td>
                <td class="text-center">
                    @if (proposta.Estado == "Pendente")
                    {
                        <div class="d-flex justify-content-center gap-2">
                            <form method="post" asp-action="AtualizarEstado" asp-controller="MVCPropostaCliente">
                                <input type="hidden" name="id" value="@proposta.Id" />
                                <input type="hidden" name="novoEstado" value="Aceite" />
                                <button type="submit" class="btn btn-success btn-sm">✔️ Aceitar</button>
                            </form>
                            <form method="post" asp-action="AtualizarEstado" asp-controller="MVCPropostaCliente">
                                <input type="hidden" name="id" value="@proposta.Id" />
                                <input type="hidden" name="novoEstado" value="Recusada" />
                                <button type="submit" class="btn btn-danger btn-sm">❌ Recusar</button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <span class="text-muted fst-italic">Já foi @proposta.Estado.ToLower()</span>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    <!-- Paginação -->
    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(
            Model,
            page => Url.Action("MinhasPropostas", new { page, estado = ViewBag.EstadoAtual }),
            new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            }
        )
    </div>
}
