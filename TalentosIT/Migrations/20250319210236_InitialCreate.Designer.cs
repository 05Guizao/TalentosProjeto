// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TalentosIT.Data;

#nullable disable

namespace TalentosIT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250319210236_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DetalheExperiencia", b =>
                {
                    b.Property<int>("CodExperienciaTalento")
                        .HasColumnType("integer");

                    b.Property<int>("AnoComeco")
                        .HasColumnType("integer");

                    b.Property<int>("AnoTermino")
                        .HasColumnType("integer");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodExperienciaTalento");

                    b.ToTable("DetalheExperiencia");
                });

            modelBuilder.Entity("PerfilTalento", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cod"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrecoHora")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cod");

                    b.HasIndex("IdUtilizador");

                    b.ToTable("PerfilTalento");
                });

            modelBuilder.Entity("PropostaSkill", b =>
                {
                    b.Property<int>("IdPropostaTrabalho")
                        .HasColumnType("integer");

                    b.Property<int>("CodSkill")
                        .HasColumnType("integer");

                    b.Property<int?>("MinAnosExperiencia")
                        .HasColumnType("integer");

                    b.HasKey("IdPropostaTrabalho", "CodSkill");

                    b.HasIndex("CodSkill");

                    b.ToTable("PropostaSkill");
                });

            modelBuilder.Entity("PropostaTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaTalento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CodPerfilTalento")
                        .HasColumnType("integer");

                    b.Property<string>("DescricaoTrabalho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumTotalHoras")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CodPerfilTalento");

                    b.HasIndex("IdUtilizador");

                    b.ToTable("PropostaTrabalho");
                });

            modelBuilder.Entity("Skill", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cod"));

                    b.Property<string>("AreaProfissional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cod");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("TalentoSkill", b =>
                {
                    b.Property<int>("CodPerfilTalento")
                        .HasColumnType("integer");

                    b.Property<int>("CodSkill")
                        .HasColumnType("integer");

                    b.Property<int>("AnosDeExperiencia")
                        .HasColumnType("integer");

                    b.HasKey("CodPerfilTalento", "CodSkill");

                    b.HasIndex("CodSkill");

                    b.ToTable("TalentoSkill");
                });

            modelBuilder.Entity("Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("DetalheExperiencia", b =>
                {
                    b.HasOne("PerfilTalento", "PerfilTalento")
                        .WithMany()
                        .HasForeignKey("CodExperienciaTalento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilTalento");
                });

            modelBuilder.Entity("PerfilTalento", b =>
                {
                    b.HasOne("Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("PropostaSkill", b =>
                {
                    b.HasOne("Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("CodSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PropostaTrabalho", "PropostaTrabalho")
                        .WithMany()
                        .HasForeignKey("IdPropostaTrabalho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropostaTrabalho");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("PropostaTrabalho", b =>
                {
                    b.HasOne("PerfilTalento", "PerfilTalento")
                        .WithMany()
                        .HasForeignKey("CodPerfilTalento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilTalento");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("TalentoSkill", b =>
                {
                    b.HasOne("PerfilTalento", "PerfilTalento")
                        .WithMany()
                        .HasForeignKey("CodPerfilTalento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("CodSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilTalento");

                    b.Navigation("Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
